================================================================
4. How to setup Xcode for a Flutter App with the help of Appollo
================================================================

In this tutorial, you will learn how to **configure Xcode** with the help of Appollo to **build your app**.

**This can be achieved without a Mac**. Therefore, you can accomplish this part on  **Windows** or **Linux**.

Requirements
------------

**Before starting the build**, make sure you are in the root folder of your Flutter app.

**If** you do not have a Flutter app for this tutorial, get started on the |flutter_app|.

You also have to make sure that you have already **created at least one App ID**.

You can use ``appollo app ls`` to retrieve a list of all your apps and see their **key**

.. image:: /img/appollo-app-ls.jpg
  :alt: Appollo app ls
  :align: center

|

See previous :ref:`step <previous_step>` of this tutorial if you have skipped it.

Start the configuration build
-----------------------------

When starting an Appollo build, with ``appollo build start``, you are asked to type in your **App key**

and your **build type** among 6 different types.

At this stage, since you want to be able to configure Xcode, you have to use the **configuration** type.

Your build has now been registered and will be started as soons as possible !

.. image:: /img/appollo-build-start.jpg
  :alt: Appollo build start
  :align: center

|

You are being given a **key** which will be important for the rest of the configuration process.

Now, if you type in ``appollo build detail`` with the build key, you will have a detailed view of the build's status.

You can also easily access the logs of your build with the command ``appollo build logs KEY``

.. note::

  Most of the build commands require you to type in your **build key**

Connect your configuration build
--------------------------------

Once your build is ready, you can use ``appollo build connect KEY``.

This command will list you your connection settings and credentials.

.. image:: /img/appollo-build-connect.jpg
  :alt: Appollo build connect
  :align: center

|

.. tip:: If you try to connect a build that was not meant for remote desktop, no problem, Appollo will suggest
         you to create one automatically.

.. image:: /img/appollo-connect-other.jpg
  :alt: Appollo build connect with other build
  :align: center

|

Use Spice Remote viewer to configure Xcode
------------------------------------------

For this step, you need a remote desktop access application. In this tutorial, the one used is **Spice-Space's** |spice_client|.

Launch your software, indicate the **url** your were given and connect.

.. image:: /img/appollo-remote-connect.jpg
  :alt: Appollo remote connect
  :align: center

|

Second, simply type in the **connection_password** to authenticate.

.. image:: /img/appollo-remote-pw.jpg
  :alt: Appollo remote password
  :align: center

|

Then, use the **user_password** you received to log in.

And that is how you access the remote desktop.

Configure Xcode on the VM
-------------------------

At this point, follow these **4-easy steps**:

To configure it with Xcode,

1. Open Xcode

2. Select Open an existing project

.. image:: /img/appollo-xcode.jpg
  :alt: Appollo remote xcode
  :align: center

|

3. Select file Documents/app/ios/Runner.xcworkspace

.. image:: /img/appollo-xcode-file.jpg
  :alt: Appollo remote xcode file
  :align: center

|

4. Enjoy !

.. image:: /img/appollo-xcode-build.jpg
  :alt: Appollo remote xcode build
  :align: center

|

.. |spice_client| raw:: html

   <a href="https://www.spice-space.org/download.html" target="_blank">client</a>

.. |flutter_app| raw:: html

   <a href="https://docs.flutter.dev/get-started/test-drive?tab=vscode#create-app" target="_blank"> official Flutter tutorial</a>
